
import tkinter as tk
# numpy 설치하세요
# import numpy as np 
from tkinter import messagebox


class Game_object(object):
    def __init__(self, canvas, item):
        self.canvas = canvas
        self.item = item

    def delete(self):
        self.canvas.delete(self.item)   


# class make_background(Game_object):
#     dkjdjk


class Game(tk.Frame):
    def __init__(self, master):
        super(Game, self).__init__(master)
        self.lives = 3
        self.level = 0
        self.reset = 1
        self.width = 610
        self.height = 400
        self.canvas = tk.Canvas(self, bg='#aaaaff', width=self.width, height=self.height)
        self.canvas.pack()
        self.pack()

        self.items = {}

        self.hud = None
        self.setup_game(self, master)
        self.canvas.focus_set()


    # def add_block(self, x, y, hits):
    #     block = block()
    #     brick = Brick(self.canvas, x, y, hits)
    #     self.items[brick.item] = brick

    def draw_text(self, x, y, text, size='40'):
        font = ('Helvetica', size)
        return self.canvas.create_text(x, y, text=text, font=font)

    def update_lives_text(self):
        text = "Lives: %s Level : %s" % (self.lives, self.level)
        if self.hud is None:
            self.hud = self.draw_text(80, 20, text, 15)
        else:
            self.canvas.itemconfig(self.hud, text=text)

    def setup_game(self, master):
        self.canvas.unbind('<space>')
        self.canvas.delete(self.text)
        self.paddle.ball = None
        self.game_loop()
        menubar= tk.Menu(master)
        filemenu= tk.Menu(menubar, tearoff=0)
        filemenu.add_command(label="9*9", command = self.begin)
        filemenu.add_separator()
        filemenu.add_command(label="Exit", command= master.destroy)
        menubar.add_cascade(label="File", menu=filemenu)
        master.config(menu=menubar)
        

    def game_loop(self):
        self.after(1000, self.setup_game(self.level, self.reset))

    def check_collisions(self):
        ball_coords = self.ball.get_position()
        items = self.canvas.find_overlapping(*ball_coords)
        objects = [self.items[x] for x in items if x in self.items]
        self.ball.collide(objects)


        




if __name__ == '__main__':
    root = tk.Tk()
    root.title('Hello, mine!')
    game = Game(root)
    game.mainloop()
